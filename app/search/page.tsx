import React from 'react';
import Header from './components/Header';
import SearchSideBar from './components/SearchSideBar';
import RestaurantCard from './components/RestaurantCard';
import type { Metadata } from 'next';
import { PRICE, PrismaClient } from '@prisma/client';


export const metadata: Metadata = {
  title: 'Search',
  description: 'Generated by create next app',
};

const prisma = new PrismaClient();

const fetchRestaurantsByCity = (city: string | undefined) => {
  if (!city) return [];

  return prisma.restaurant.findMany({
    where: {
      location: {
        name: {
          equals: city.toLowerCase(),
        },
      },
    },
    select: {
      id: true,
      name: true,
      main_image: true,
      price: true,
      location: true,
      cuisine: true,
      slug: true,
    },
  });
};

const fetchLocations = () => {
  return prisma.location.findMany();
};

const fetchCuisines = () => {
  return prisma.cuisine.findMany();
};

export interface SearchParamsType {
  cuisine?: string;
  city?: string;
  price?: PRICE;
}

const SearchPage = async ({
  searchParams,
}: {
  searchParams: SearchParamsType;
}) => {
  const restaurants = await fetchRestaurantsByCity(searchParams.city);
  const locations = await fetchLocations();
  const cuisines = await fetchCuisines();

  return (
    <>
      <Header />
      <div className="flex py-4 m-auto w-2/3 justify-between items-start">
        <SearchSideBar locations={locations} cuisines={cuisines} searchParams={searchParams} />
        <div className="w-5/6">
          {restaurants.length === 0 ? (
            <p>Sorry, we found no restaurants</p>
          ) : (
            restaurants.map((restaurant) => <RestaurantCard key={restaurant.id} restaurant={restaurant} />)
          )}
        </div>
      </div>
    </>
  );
};

export default SearchPage;
